{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Memory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/AddMemory.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","icon","faGoogle","Memory","userObj","memoryObj","title","def","onDeleteClick","window","confirm","doc","uid","id","delete","attachmentUrl","refFromURL","onLikedClick","liked","update","src","style","backgroundImage","width","faStar","size","date","clsasName","faTrash","color","Home","search","setSearch","searchKeyWord","setSearchKey","memories","setMemories","memory","setMemory","mobileSearch","setMobileSearch","useEffect","collection","orderBy","onSnapshot","snapshot","memoryArray","docs","map","filter","toLowerCase","includes","push","document","querySelector","classList","remove","add","to","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","likedPhotoURL","setlikedPhotoURL","urlCondition","setUrlCondition","updateProfile","likedPhotoHide","autoFocus","urlArray","urls","imgContent","url","likedPhoto","signOut","Navigation","faUser","AddMemory","memoryTitle","setMemoryTitle","memoryDef","setMemoryDef","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","today","Date","getFullYear","getMonth","getDate","createdAt","now","creatorId","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","faTimes","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","faSpinner","pulse","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8f22f8f.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport styles from \"Auth.css\"\nconst inputStyles = {};\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={ onSubmit } className=\"authFormContainer\">\n                <input\n                    name='email'\n                    type='email'\n                    placeholder='Email'\n                    required\n                    value={ email }\n                    onChange={ onChange }\n                    className=\"authInput\"\n                />\n                <input\n                    name='password'\n                    type='password'\n                    placeholder='Password'\n                    required\n                    value={ password }\n                    onChange={ onChange }\n                    className=\"authInput\"\n                />\n                <input\n                    type='submit'\n                    className=\"authInput authSubmit\"\n                    value={ newAccount ? \"가입하기\" : \"기억 속으로\" }\n                />\n                { error && <span className=\"authError\">{ error }</span> }\n            </form>\n            <span onClick={ toggleAccount } className=\"authSwitch\">\n                { newAccount ? \"로그인\" : \"가입하기\" }\n            </span>\n        </>\n    );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport styles from \"Auth.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faGoogle,\n} from \"@fortawesome/free-brands-svg-icons\";\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"auth\">\n            <div className=\"authTitle\">\n                <h1>Memory</h1>\n            </div>\n            <div className=\"authContainer\">\n                <AuthForm />\n                <div>\n                    <div className=\"authBtns\">\n                        <button onClick={ onSocialClick } name=\"google\" className=\"authBtn\">\n                            <FontAwesomeIcon icon={ faGoogle } />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport styles from \"Memory.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\"\nimport { faStar } from \"@fortawesome/free-regular-svg-icons\"\nconst Memory = ({ userObj, memoryObj }) => {\n    const [editing, setEditing] = useState(false);\n    const [newMemoryTitle, setNewMemoryTitle] = useState(memoryObj.title);\n    const [newMemoryDef, setNewMemoryDef] = useState(memoryObj.def);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\n            \"정말로 당신의 기억을 삭제하시겠습니까?\"\n        );\n        if (ok) {\n            await dbService.doc(`${userObj.uid}/${memoryObj.id}`).delete();\n            if (memoryObj.attachmentUrl !== \"\") {\n                await storageService\n                    .refFromURL(memoryObj.attachmentUrl)\n                    .delete();\n            }\n        }\n    };\n    const onLikedClick = async () => {\n        if (memoryObj.liked === null) {\n            return;\n        }\n        if (memoryObj.liked === true) {\n            await dbService.doc(`${userObj.uid}/${memoryObj.id}`).update({\n                liked: false,\n            });\n        } else if (memoryObj.liked === false) {\n            await dbService.doc(`${userObj.uid}/${memoryObj.id}`).update({\n                liked: true,\n            });\n            console.log(\"liked\")\n        }\n    }\n    return (\n        <div className=\"memoryCard\">\n\n            <div className=\"memoryImg\">\n                { memoryObj.attachmentUrl && <img src={ memoryObj.attachmentUrl }\n                    style={ {\n                        backgroundImage: memoryObj.attachmentUrl,\n                        width: 480,\n                    } } /> }\n            </div>\n\n            <div className=\"components\">\n                <h4>{ memoryObj.title }</h4>\n                <p>{ memoryObj.def }</p>\n                { memoryObj.liked == true ? (\n                    <span onClick={ onLikedClick } className=\"likedPic liked\"><FontAwesomeIcon icon={ faStar } size=\"2x\" /></span>\n                )\n                    : <span onClick={ onLikedClick } className=\"likedPic\"><FontAwesomeIcon icon={ faStar } size=\"2x\" /></span>\n                }\n\n                { memoryObj.date && <span className=\"componentDate\">{ memoryObj.date }</span> }\n\n                <h3 onClick={ onDeleteClick } clsasName=\"componentTrash\"><FontAwesomeIcon icon={ faTrash } color=\"#6DB65B\" size=\"larger\" /></h3>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Memory","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport { Link } from \"react-router-dom\";\nimport Memory from \"components/Memory\";\nimport styles from \"Style.css\"\n\nconst Home = ({ userObj }) => {\n    const [search, setSearch] = useState(false);\n    const [searchKeyWord, setSearchKey] = useState(\"\");\n    const [memories, setMemories] = useState([]);\n    const [memory, setMemory] = useState([]);\n    const [mobileSearch, setMobileSearch] = useState(false);\n    useEffect(() => {\n        dbService\n            .collection(userObj.uid)\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const memoryArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                console.log(memoryArray)\n                setMemories(memoryArray)\n            });\n\n    }, []);\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        setSearchKey(value);\n        setSearch(true)\n        var memoryArray = []\n        const filterMemory = memories.filter((memory) => {\n            if (memory.title.toLowerCase().includes(value)) {\n                memoryArray.push(memory)\n            } else if (memory.def.toLowerCase().includes(value)) {\n                memoryArray.push(memory)\n            }\n        });\n        setMemory(memoryArray)\n    };\n    const onMobileSearch = () => {\n        if (mobileSearch) {\n            setMobileSearch(false)\n            document.querySelector(\".searchBar\").classList.remove(\"mobile\")\n        } else {\n            setMobileSearch(true)\n            document.querySelector(\".searchBar\").classList.add(\"mobile\")\n        }\n    }\n    return (\n        <div className=\"main\">\n            <input className=\"searchBar mobile\" type=\"search\" placeholder=\"Search...\" onChange={ onChange } value={ searchKeyWord } />\n            <button className=\"isMobile\" onClick={ onMobileSearch }>?</button>\n            <div className=\"container\">\n                { search === true ? (memory.map((memory) => (\n                    < Memory\n                        key={ memory.id }\n                        userObj={ userObj }\n                        memoryObj={ memory }\n                    />\n                ))\n                ) : (memories.map((memory) => (\n                    <Memory\n                        key={ memory.id }\n                        userObj={ userObj }\n                        memoryObj={ memory }\n                    />\n                ))) }\n\n            </div>\n\n            <button className=\"plus\" ><Link to=\"/addMemory\" className=\"plusText\">\n                +\n            </Link></button>\n        </div>\n    )\n}\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"Profile.css\"\nexport default ({ refreshUser, userObj }) => {\n    const [memories, setMemories] = useState([]);\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const [likedPhotoURL, setlikedPhotoURL] = useState([]);\n    const [urlCondition, setUrlCondition] = useState(false);\n    useEffect(() => {\n        dbService\n            .collection(userObj.uid)\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const memoryArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                console.log(memoryArray)\n                setMemories(memoryArray)\n            });\n    }, []);\n    useEffect(() => {\n        console.log(likedPhotoURL)\n        console.log(urlCondition)\n    }, [likedPhotoURL])\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n        history.push(\"/\")\n    };\n    const onSeeMemoryClick = () => {\n        var urlArray = [];\n        memories.map((memory) => {\n            console.log(memory.liked);\n            if (memory.liked === true) {\n                urlArray.push(memory.attachmentUrl);\n            }\n        })\n        setlikedPhotoURL(urlArray);\n        setUrlCondition(true)\n    }\n    const likedPhotoHide = () => {\n        setUrlCondition(false)\n    }\n    const likedPhoto = (urls) => {\n        let imgContent = [];\n        for (var url of urls) {\n            imgContent.push(<img src={ url } />)\n        }\n        imgContent.push(<span onClick={ likedPhotoHide } className=\"hideButton\">hide</span>)\n        return imgContent;\n\n    };\n    return (\n        <div className='profileContainer'>\n            <form onSubmit={ onSubmit } className='profileForm'>\n                <input\n                    onChange={ onChange }\n                    type='text'\n                    autoFocus\n                    placeholder='Display name'\n                    value={ newDisplayName }\n                    className='formInput'\n                />\n                <input\n                    type='submit'\n                    value='Update Profile'\n                    className='formBtn'\n                />\n            </form>\n            <button className=\"PhotoBtn\" onClick={ onSeeMemoryClick }>추억보기</button>\n            <div className=\"likedimg\">\n                { urlCondition == true &&\n                    (likedPhoto(likedPhotoURL))\n                }\n\n            </div>\n            <button onClick={ onLogOutClick } className=\"logOut\">\n                log out\n            </button>\n        </div >\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from \"fbase\";\nimport { Link } from \"react-router-dom\";\nimport Memory from \"components/Memory\";\nimport styles from \"Navigation.css\"\n\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst Navigation = ({ userObj }) => {\n\n    return (\n        <>\n            <Link to=\"/\" className=\"navTitle\">Memory</Link>\n            <nav>\n\n                <button>\n                    <Link to=\"/profile\">\n                        <span className=\"navProfile\">\n                            <FontAwesomeIcon icon={ faUser } size=\"2x\" />\n                        </span>\n                    </Link></button>\n\n            </nav>\n        </>\n    );\n}\n\n\nexport default Navigation;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\"\nimport styles from \"AddMemory.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nconst AddMemory = ({ userObj }) => {\n    const history = useHistory();\n    const [memoryTitle, setMemoryTitle] = useState(\"\");\n    const [memoryDef, setMemoryDef] = useState(\"\")\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (memoryTitle === \"\" || memoryDef === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        else {\n            return;\n        }\n        var today = new Date(),\n\n            date = today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate();\n        const memoryObj = {\n            title: memoryTitle,\n            def: memoryDef,\n            createdAt: Date.now(),\n            liked: false,\n            date: date,\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(userObj.uid).add(memoryObj);\n        setMemoryTitle(\"\");\n        setMemoryDef(\"\")\n        setAttachment(\"\");\n        history.push(\"/\")\n    };\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"title\") {\n            setMemoryTitle(value);\n        } else if (name === \"definition\") {\n            setMemoryDef(value);\n        }\n\n\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(null);\n    return (\n        <div className=\"form\">\n            <form onSubmit={ onSubmit } className=\"factoryForm\" >\n                <div className=\"memoryFormDiv\">\n                    <input\n                        className=\"\"\n                        value={ memoryTitle }\n                        onChange={ onChange }\n                        type=\"text\"\n                        placeholder=\"제목\"\n                        maxLength={ 50 }\n                        name=\"title\"\n                        className=\"memoryTitleInput\"\n                    />\n                    <textarea\n                        className=\"\"\n                        value={ memoryDef }\n                        onChange={ onChange }\n                        type=\"text\"\n                        placeholder=\"오늘의 되돌아보며\"\n                        maxLength={ 300 }\n                        name=\"definition\"\n                        className=\"memoryDefInput\"\n                    />\n\n                </div>\n                <label for=\"attach-file\" className=\"factoryInput__label\">\n                    <span>사진 추가</span>\n                    <FontAwesomeIcon icon={ faPlus } />\n                </label>\n                <input\n                    id=\"attach-file\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={ onFileChange }\n                    style={ {\n                        opacity: 0,\n                    } }\n                />\n                { attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={ attachment }\n                            style={ {\n                                backgroundImage: attachment,\n                                width: 200,\n                            } }\n                        />\n                        <div className=\"factoryForm__clear\" onClick={ onClearAttachment }>\n                            <FontAwesomeIcon icon={ faTimes } />\n                        </div>\n                    </div>\n                ) }\n                <input type=\"submit\" value=\"기억저장\" className=\"saveMemoryBtn\" />\n            </form>\n        </div>\n    )\n}\n\nexport default AddMemory;","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Route,\n    Switch,\n} from \"react-router-dom\"\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\n\nimport Navigation from \"components/Navigation\"\nimport AddMemory from \"./AddMemory\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={ userObj } /> }\n            <Switch>\n                { isLoggedIn ? (\n                    <div>\n                        <Route exact path='/'>\n                            <Home userObj={ userObj } />\n                        </Route>\n                        <Route exact path='/profile'>\n                            <Profile\n                                userObj={ userObj }\n                                refreshUser={ refreshUser }\n                            />\n                        </Route>\n                        <Route exact path='/addMemory'>\n                            <AddMemory\n                                userObj={ userObj }\n                            />\n                        </Route>\n                    </div>\n                ) : (\n                        <>\n                            <Route exact path='/'>\n                                <Auth />\n                            </Route>\n                        </>\n                    ) }\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport styles from \"Style.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaSpinner,\n\tfaCircleNotch,\n\tfaSync,\n\tfaCog,\n\tfaStroopwafel\n} from \"@fortawesome/free-solid-svg-icons\";\n\n\nfunction App() {\n\tconst [init, setInit] = useState(false);\n\tconst [userObj, setUserObj] = useState(null);\n\tuseEffect(() => {\n\t\tauthService.onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tsetUserObj({\n\t\t\t\t\tdisplayName: user.displayName,\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t\tupdateProfile: (args) => user.updateProfile(args),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetUserObj(null);\n\t\t\t}\n\t\t\tsetInit(true);\n\t\t});\n\t}, []);\n\tconst refreshUser = () => {\n\t\tconst user = authService.currentUser;\n\t\tsetUserObj({\n\t\t\tdisplayName: user.displayName,\n\t\t\tuid: user.uid,\n\t\t\tupdateProfile: (args) => user.updateProfile(args),\n\t\t});\n\t};\n\treturn (\n\t\t<>\n\t\t\t{init ? (<AppRouter\n\t\t\t\trefreshUser={ refreshUser }\n\t\t\t\tisLoggedIn={ Boolean(userObj) }\n\t\t\t\tuserObj={ userObj }\n\t\t\t/>) : (<div className=\"loadingPage\">\n\t\t\t\t<FontAwesomeIcon icon={ faSpinner } pulse size=\"3x\" className=\"loadingSpinner\" />\n\t\t\t\t<div className=\"loadingText\">MemoryYourLife</div>\n\t\t\t</div>)\n\t\t\t}\n\t\t</>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}